{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { UserService } from '../api/user.service';\r\nimport { DatabaseService } from '../api/database.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  email: any;\r\n  password: any;\r\n  name: any;\r\n  passwordRepeat: any;\r\n\r\n  constructor(private Router: Router, private UserService: UserService, private DatabaseService: DatabaseService) { }\r\n\r\n  ngOnInit() {\r\n    if (\r\n      window.localStorage.getItem('access_token') != 'null'\r\n    ) {\r\n      console.log('Token available -> checkLogin')\r\n      this.UserService.access_token = window.localStorage.getItem('access_token');\r\n      this.UserService.checkLogin(this.UserService.access_token)\r\n    }\r\n    else {\r\n      console.log('Token NOT available -> navToWelcome')\r\n    }\r\n  }\r\n\r\n  navToResetPassword() {\r\n    this.Router.navigate(['/reset-password'])\r\n  }\r\n\r\n  signUp() {\r\n    if (this.name && this.password && this.email) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", this.UserService.standardUrl + \"/register\");\r\n  \r\n      xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  \r\n      xhr.onload = () => this.proceed(xhr.responseText);\r\n  \r\n      let data = {\r\n        \"name\": this.name,\r\n        \"email\": this.email,\r\n        \"password\": this.password\r\n      };\r\n  \r\n      xhr.send(JSON.stringify(data));\r\n    }\r\n  }\r\n\r\n\r\n  proceed(res: any) {\r\n    res = JSON.parse(res)\r\n    if (res.status == 'MailAlreadyTaken') {\r\n      //this.DatabaseService.presentToast('E-Mail bereits vergeben');\r\n    } else {\r\n      this.UserService.access_token = res.access_token;\r\n      window.localStorage.setItem('access_token', this.UserService.access_token);\r\n\r\n      window.localStorage.setItem('name', res.user.name);\r\n      window.localStorage.setItem('mail', res.user.email);\r\n      this.UserService.name = res.user.name;\r\n      this.UserService.mail = res.user.email;\r\n  \r\n      if (res.status == \"ok\") {\r\n        this.Router.navigate(['/home'])\r\n      }\r\n    }\r\n  }\r\n\r\n  login() {\r\n    if (this.password && this.email) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", this.UserService.standardUrl + \"/login\");\r\n  \r\n      xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  \r\n      xhr.onload = () => this.proceed(xhr.responseText);\r\n  \r\n      let data = {\r\n        \"email\": this.email,\r\n        \"password\": this.password\r\n      };\r\n  \r\n      xhr.send(JSON.stringify(data));\r\n\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}